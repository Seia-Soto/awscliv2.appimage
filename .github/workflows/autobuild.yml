name: Release watchtower
on:
  push:
  schedule:
    - cron: '0 */1 * * *'

jobs:
  check-version:
    runs-on: ubuntu-20.04
    outputs:
      remote: ${{ steps.latest_remote_tag.outputs.ver }}
      local: ${{ steps.latest_local_release.outputs.ver }}
    steps:
      - name: Get latest tag
        id: latest_remote_tag
        run: |
          echo ::set-output name=ver::$( \
            curl -sL https://api.github.com/repos/aws/aws-cli/git/refs/tags | \
            jq --raw-output '.[-1].ref' | \
            grep -Eo '[0-9]+.[0-9]+.[0-9]+' \
          )
      - name: Check local release
        id: latest_local_release
        run: |
          echo ::set-output name=ver::$( \
            curl -sL "https://api.github.com/repos/${{ github.repository }}/releases/latest" | \
            jq --raw-output '.tag_name' | \
            grep -Eo '[0-9]+.[0-9]+.[0-9]+' \
          )

  build:
    runs-on: ubuntu-20.04
    needs: [check-version]
    if: |
      (needs.check-version.outputs.remote != needs.check-version.outputs.local) &&
      startsWith(needs.check-version.outputs.remote, '2.')
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: sudo apt-get install -y fuse
      - name: Build
        run: ./build '${{ needs.check-version.outputs.remote }}'
      - name: Publish new release
        id: new_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.check-version.outputs.remote }}
          release_name: v${{ needs.check-version.outputs.remote }}
          body: |
            This build is automated via GitHub Actions.
            If you find any errors, please open an issue and let me know.
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.new_release.outputs.upload_url }}
          asset_path: ./aws-x86_64.AppImage
          asset_name: aws-x86_64.AppImage
          asset_content_type: application/zip
