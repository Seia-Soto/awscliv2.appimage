name: Release watchtower

on:
  push:
  schedule:
    - cron: '0 */1 * * *'

jobs:
  prepare:
    runs-on: ubuntu-20.04
    outputs:
      remote: ${{ steps.latest_remote_tag.outputs.ver }}
      local: ${{ steps.latest_local_release.outputs.ver }}
      upload_url: ${{ steps.new_release.outputs.upload_url }}
    steps:
      - name: Get latest tag
        id: latest_remote_tag
        run: |
          echo ::set-output name=ver::$( \
            curl -sL https://api.github.com/repos/aws/aws-cli/git/refs/tags | \
            jq --raw-output '.[-1].ref' | \
            grep -Eo '[0-9]+.[0-9]+.[0-9]+' \
          )
      - name: Check local release
        id: latest_local_release
        run: |
          echo ::set-output name=ver::$( \
            curl -sL "https://api.github.com/repos/${{ github.repository }}/releases/latest" | \
            jq --raw-output '.tag_name' | \
            grep -Eo '[0-9]+.[0-9]+.[0-9]+' \
          )
      - name: Publish new release
        if: |
          (steps.latest_remote_tag.outputs.ver != steps.latest_local_release.outputs.ver) &&
          startsWith(steps.latest_remote_tag.outputs.ver, '2.')
        id: new_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.latest_remote_tag.outputs.ver }}
          release_name: v${{ steps.latest_remote_tag.outputs.ver }}
          body: |
            This build is automated via GitHub Actions.
            If you find any errors, please open an issue and let me know.

            > Outputs will be available later because we're building AppImage sequentially by arch after publishing the release.
          draft: false
          prerelease: false

  build:
    runs-on: ubuntu-20.04
    needs: [prepare]
    strategy:
      fail-fast: false
      matrix:
        arch: ['x86_64', 'aarch64']
    if: |
      (needs.prepare.outputs.remote != needs.prepare.outputs.local) &&
      startsWith(needs.prepare.outputs.remote, '2.')
    steps:
      - uses: actions/checkout@v2
      - name: Build for x86 machine
        if: matrix.arch == 'x86_64'
        run: |
          sudo apt-get install fuse -y --no-install-recommends
          ./build '${{ needs.prepare.outputs.remote }}'
      - name: Prepare environment to emulate non-x86 machines
        if: matrix.arch != 'x86_64'
        run: |
          apt-get update
          apt-get install qemu-user-static binfmt-support -y
      - uses: uraimo/run-on-arch-action@v2.0.5
        name: Build for non-x86 machines
        if: matrix.arch != 'x86_64'
        with:
          arch: ${{ matrix.arch }}
          distro: ubuntu20.04
          run: |
            apt-get update
            apt-get install fuse curl unzip -y --no-install-recommends
            ./build "${{ needs.prepare.outputs.remote }}" "${{ matrix.arch }}"
      - name: Set filename
        id: filename
        run: echo "::set-output name=value::./aws-$(uname -m).AppImage"
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare.outputs.upload_url }}
          asset_path: ${{ steps.filename.outputs.value }}
          asset_name: ${{ steps.filename.outputs.value }}
          asset_content_type: application/zip
