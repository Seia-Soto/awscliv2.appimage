name: Release watchtower

on:
  push:
  schedule:
    - cron: '0 */1 * * *'

jobs:
  check-version:
    runs-on: ubuntu-20.04
    outputs:
      remote: ${{ steps.latest_remote_tag.outputs.ver }}
      local: ${{ steps.latest_local_release.outputs.ver }}
    steps:
      - name: Get latest tag
        id: latest_remote_tag
        run: |
          echo ::set-output name=ver::$( \
            curl -sL https://api.github.com/repos/aws/aws-cli/git/refs/tags | \
            jq --raw-output '.[-1].ref' | \
            grep -Eo '[0-9]+.[0-9]+.[0-9]+' \
          )
      - name: Check local release
        id: latest_local_release
        run: |
          echo ::set-output name=ver::$( \
            curl -sL "https://api.github.com/repos/${{ github.repository }}/releases/latest" | \
            jq --raw-output '.tag_name' | \
            grep -Eo '[0-9]+.[0-9]+.[0-9]+' \
          )

  build:
    runs-on: ubuntu-20.04
    needs: [check-version]
    if: |
      (needs.check-version.outputs.remote != needs.check-version.outputs.local) &&
      startsWith(needs.check-version.outputs.remote, '2.')
    steps:
      - uses: actions/checkout@v2
      - name: Create new tag and push
        run: |
          git config user.name "GitHub Actions"
          git config user.email noreply@github.com

          if [ $(git tag -l "v${{ needs.check-version.outputs.remote }}") ]; then
            git tag "v${{ needs.check-version.outputs.remote }}"
            git push origin "v${{ needs.check-version.outputs.remote }}"
          fi
      - name: Install dependencies
        run: sudo apt-get install -y fuse
      - name: Build
        run: |
          ./build '${{ needs.check-version.outputs.remote }}' x86_64
          ./build '${{ needs.check-version.outputs.remote }}' aarch64
      - name: Publish release
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ needs.check-version.outputs.remote }}
          tag_name: v${{ needs.check-version.outputs.remote }}
          body: |
            This build is automated via GitHub Actions.
            If you find any errors, please open an issue and let me know.
          draft: false
          prerelease: false
          files: |
            ./aws-x86_64.AppImage
            ./aws-aarch64.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
